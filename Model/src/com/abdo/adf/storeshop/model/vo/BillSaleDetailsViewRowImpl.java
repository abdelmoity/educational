package com.abdo.adf.storeshop.model.vo;


import com.abdo.adf.storeshop.model.eo.BillSaleDetailsImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Aug 06 20:47:54 EEST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BillSaleDetailsViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_BILLSALEDETAILS = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getId();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setId((Number)value);
            }
        }
        ,
        Price {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getPrice();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setPrice((Number)value);
            }
        }
        ,
        Discount {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getDiscount();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setDiscount((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreatedDate {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getCreatedDate();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setCreatedDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedDate {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getLastUpdatedDate();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setLastUpdatedDate((Timestamp)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        BillSaleId {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getBillSaleId();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setBillSaleId((Number)value);
            }
        }
        ,
        Product {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getProduct();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setProduct((Number)value);
            }
        }
        ,
        ProductCategory {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getProductCategory();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setProductCategory((Number)value);
            }
        }
        ,
        Amount {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getAmount();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setAmount((Number)value);
            }
        }
        ,
        ProductsCategoryLOV1 {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getProductsCategoryLOV1();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ProductsTypesLov1 {
            public Object get(BillSaleDetailsViewRowImpl obj) {
                return obj.getProductsTypesLov1();
            }

            public void put(BillSaleDetailsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(BillSaleDetailsViewRowImpl object);

        public abstract void put(BillSaleDetailsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int PRICE = AttributesEnum.Price.index();
    public static final int DISCOUNT = AttributesEnum.Discount.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int LASTUPDATEDDATE = AttributesEnum.LastUpdatedDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int BILLSALEID = AttributesEnum.BillSaleId.index();
    public static final int PRODUCT = AttributesEnum.Product.index();
    public static final int PRODUCTCATEGORY = AttributesEnum.ProductCategory.index();
    public static final int AMOUNT = AttributesEnum.Amount.index();
    public static final int PRODUCTSCATEGORYLOV1 = AttributesEnum.ProductsCategoryLOV1.index();
    public static final int PRODUCTSTYPESLOV1 = AttributesEnum.ProductsTypesLov1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BillSaleDetailsViewRowImpl() {
    }

    /**
     * Gets BillSaleDetails entity object.
     * @return the BillSaleDetails
     */
    public BillSaleDetailsImpl getBillSaleDetails() {
        return (BillSaleDetailsImpl)getEntity(ENTITY_BILLSALEDETAILS);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public Number getId() {
        return (Number) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for PRICE using the alias name Price.
     * @return the PRICE
     */
    public Number getPrice() {
//        if(getAttributeInternal(AMOUNT)!=null && getAttributeInternal(PRODUCT)!=null){
//            Number amount = (Number)getAttributeInternal(AMOUNT);
//            RowSet rowSet=  getProductsTypesLov1();
//            if(rowSet.getCurrentRow()!=null){
//                Row row=rowSet.getCurrentRow();
//                Number productPrice = (Number)row.getAttribute("SalePrice");
//                return new Number(amount.mul(productPrice));
//            }
//            return (Number) getAttributeInternal(PRICE);
//        }else{
//        return (Number) getAttributeInternal(PRICE);
//        }
        return (Number) getAttributeInternal(PRICE);
    }

    /**
     * Sets <code>value</code> as attribute value for PRICE using the alias name Price.
     * @param value value to set the PRICE
     */
    public void setPrice(Number value) {
        setAttributeInternal(PRICE, value);
    }

    /**
     * Gets the attribute value for DISCOUNT using the alias name Discount.
     * @return the DISCOUNT
     */
    public Number getDiscount() {
        return (Number) getAttributeInternal(DISCOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for DISCOUNT using the alias name Discount.
     * @param value value to set the DISCOUNT
     */
    public void setDiscount(Number value) {
        setAttributeInternal(DISCOUNT, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_DATE using the alias name CreatedDate.
     * @param value value to set the CREATED_DATE
     */
    public void setCreatedDate(Timestamp value) {
        setAttributeInternal(CREATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @return the LAST_UPDATED_DATE
     */
    public Timestamp getLastUpdatedDate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_DATE using the alias name LastUpdatedDate.
     * @param value value to set the LAST_UPDATED_DATE
     */
    public void setLastUpdatedDate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for BILL_SALE_ID using the alias name BillSaleId.
     * @return the BILL_SALE_ID
     */
    public Number getBillSaleId() {
        return (Number) getAttributeInternal(BILLSALEID);
    }

    /**
     * Sets <code>value</code> as attribute value for BILL_SALE_ID using the alias name BillSaleId.
     * @param value value to set the BILL_SALE_ID
     */
    public void setBillSaleId(Number value) {
        setAttributeInternal(BILLSALEID, value);
    }

    /**
     * Gets the attribute value for PRODUCT using the alias name Product.
     * @return the PRODUCT
     */
    public Number getProduct() {
        return (Number) getAttributeInternal(PRODUCT);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT using the alias name Product.
     * @param value value to set the PRODUCT
     */
    public void setProduct(Number value) {
        setAttributeInternal(PRODUCT, value);
    }

    /**
     * Gets the attribute value for PRODUCT_CATEGORY using the alias name ProductCategory.
     * @return the PRODUCT_CATEGORY
     */
    public Number getProductCategory() {
        return (Number) getAttributeInternal(PRODUCTCATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for PRODUCT_CATEGORY using the alias name ProductCategory.
     * @param value value to set the PRODUCT_CATEGORY
     */
    public void setProductCategory(Number value) {
        setAttributeInternal(PRODUCTCATEGORY, value);
    }

    /**
     * Gets the attribute value for AMOUNT using the alias name Amount.
     * @return the AMOUNT
     */
    public Number getAmount() {
        return (Number) getAttributeInternal(AMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for AMOUNT using the alias name Amount.
     * @param value value to set the AMOUNT
     */
    public void setAmount(Number value) {
        setAttributeInternal(AMOUNT, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProductsCategoryLOV1.
     */
    public RowSet getProductsCategoryLOV1() {
        return (RowSet)getAttributeInternal(PRODUCTSCATEGORYLOV1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ProductsTypesLov1.
     */
    public RowSet getProductsTypesLov1() {
        return (RowSet)getAttributeInternal(PRODUCTSTYPESLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
